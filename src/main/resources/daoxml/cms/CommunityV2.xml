<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tfriends.dao.CmsDAOV2">
    <!-- Search Query -->
    <sql id="search">
        <if test='dto.search_type == "all".toString()'>
            AND
            (
            <include refid="t" /> OR
            <include refid="c" /> OR
            <include refid="w" />
            )
        </if>
        <if test='dto.search_type == "tnc".toString()'>
            AND
            (
            <include refid="t" /> OR
            <include refid="c" />
            )
        </if>
        <if test='dto.search_type == "title".toString()'>
            AND
            (
            <include refid="t" />
            )
        </if>
        <if test='dto.search_type == "writer".toString()'>
            AND
            (
            <include refid="w" />
            )
        </if>
        <if test='dto.search_type == "content".toString()'>
            AND
            (
            <include refid="c" />
            )
        </if>
    </sql>
    <sql id="t">
        `title`like CONCAT('%', #{dto.word}, '%')
    </sql>
    <sql id="c">
        `content`like CONCAT('%', #{dto.word}, '%')
    </sql>
    <sql id="w">
        b.`name`like CONCAT('%', #{dto.word}, '%')
    </sql>

    <!-- ResultMap -->
    <resultMap id="secureDtoResultMap" type="com.tfriends.dto.cms.SecureDTO">
        <id column="no" property="no" />
        <result column="type" property="type" />
        <result column="url" property="url" />
        <result column="name" property="name" />
        <result column="current" property="current" />
        <collection property="permission" ofType="com.tfriends.dto.system.PermissionDTOv2">
            <result column="write" property="write" />
            <result column="read" property="read" />
        </collection>
    </resultMap>

    <resultMap id="articleReadMap" type="com.tfriends.dto.cms.DefaultDTOv2">
        <id column="no" property="no" />
        <result column="title" property="title" />
        <result column="name" property="name" />
        <result column="writer" property="writer" />
        <result column="gravatar" property="gravatar" />
        <result column="roles" property="roles" />
        <result column="content" property="content" />
        <collection property="datatime" ofType="com.tfriends.dto.cms.Timestamp">
            <result column="regdate" property="regdate" />
            <result column="update" property="update" />
        </collection>
    </resultMap>
    
    <select id="secureWindow" resultMap="secureDtoResultMap">
        SELECT `type`,`url`,`name`,`write`,`read` FROM boards WHERE `hash` = #{hash}
    </select>

    <!-- BoardList Query -->
    <select id="boardList" resultMap="articleReadMap">
        <![CDATA[
            SELECT a.`no`, a.`title`, b.`name`, a.`regdate`
        ]]>
        <include refid="boardListSQL"></include>
        <![CDATA[
            ORDER BY `no` DESC limit #{dto.firstArticle},#{dto.limit}
        ]]>
    </select>
    <select id="boardCount" resultType="int">
        <![CDATA[
            SELECT COUNT(a.`no`)
        ]]>
        <include refid="boardListSQL"></include>
    </select>
    <sql id="boardListSQL">
        <![CDATA[
            FROM `${board}` as a
            INNER JOIN `account_union`.`accounts` as b on a.writer = b.uno where `no` > 0
        ]]>
        <include refid="search"></include>
    </sql>

    <!-- RWX Query -->
    <select id="boardArticle" resultMap="articleReadMap">
        SELECT
        a.`no`, a.`title`, b.`name`, a.`writer`, MD5(b.`mail`) AS `gravatar`, c.`name` AS `roles` , `content`, `regdate`, `update`
        FROM `${board}` as a
        INNER JOIN `account_union`.`accounts` as b on a.`writer` = b.`uno`
        INNER JOIN `account_union`.`roles` AS c ON b.`grade` = c.`no`
        WHERE a.`no` = #{no}
    </select>

    <insert id="newArticle">
        INSERT INTO `${board}`
        (`title`, `writer`, `content`) VALUES (#{dto.title}, #{dto.writer}, #{dto.content})
    </insert>

    <update id="updateArticle">
        UPDATE `${board}` SET
        `title` = #{dto.title},
        `content` = #{dto.content},
        `update` = NOW()
        WHERE
        `no` = #{dto.no} AND
        `writer` = #{dto.writer}
    </update>
</mapper>